Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier id SEMI
    7                | type_specifier id LBRACKET num RBRACKET SEMI

    8 type_specifier: INT
    9               | VOID

   10 @1: %empty

   11 fun_declaration: type_specifier id @1 LPAREN params RPAREN compound_stmt

   12 params: param_list
   13       | VOID

   14 param_list: param_list COMMA param
   15           | param

   16 param: type_specifier id
   17      | type_specifier id LBRACKET RBRACKET

   18 id: ID

   19 num: NUM

   20 lcurly: LCURLY

   21 rcurly: RCURLY

   22 compound_stmt: lcurly local_declarations statement_list rcurly

   23 local_declarations: local_declarations var_declaration
   24                   | %empty

   25 statement_list: statement_list statement
   26               | %empty

   27 statement: expression_stmt
   28          | compound_stmt
   29          | selection_stmt
   30          | iteration_stmt
   31          | return_stmt

   32 expression_stmt: expression SEMI
   33                | SEMI

   34 selection_stmt: IF LPAREN expression RPAREN statement
   35               | IF LPAREN expression RPAREN statement ELSE statement

   36 iteration_stmt: WHILE LPAREN expression RPAREN statement

   37 return_stmt: RETURN SEMI
   38            | RETURN expression SEMI

   39 expression: var ASSIGN expression
   40           | simple_expression

   41 var: id

   42 @2: %empty

   43 var: id @2 LBRACKET expression RBRACKET

   44 simple_expression: additive_expression relop additive_expression
   45                  | additive_expression

   46 relop: GE
   47      | GT
   48      | LT
   49      | LE
   50      | EQ
   51      | NE

   52 additive_expression: additive_expression addop term
   53                    | term

   54 addop: PLUS
   55      | MINUS

   56 term: term mulop factor
   57     | factor

   58 mulop: TIMES
   59      | OVER

   60 factor: LPAREN expression RPAREN
   61       | var
   62       | call
   63       | num

   64 @3: %empty

   65 call: id @3 LPAREN args RPAREN

   66 args: arg_list
   67     | %empty

   68 arg_list: arg_list COMMA expression
   69         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
NOTELSE (258)
ELSE (259) 35
IF (260) 34 35
INT (261) 8
RETURN (262) 37 38
VOID (263) 9 13
WHILE (264) 36
ID (265) 18
NUM (266) 19
EQ (267) 50
NE (268) 51
LT (269) 48
LE (270) 49
GT (271) 47
GE (272) 46
SEMI (273) 6 7 32 33 37 38
COMMA (274) 14 68
LPAREN (275) 11 34 35 36 60 65
RPAREN (276) 11 34 35 36 60 65
LBRACKET (277) 7 17 43
RBRACKET (278) 7 17 43
LCURLY (279) 20
RCURLY (280) 21
ASSIGN (281) 39
PLUS (282) 54
MINUS (283) 55
TIMES (284) 58
OVER (285) 59
ERROR (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
declaration_list (34)
    on left: 2 3, on right: 1 2
declaration (35)
    on left: 4 5, on right: 2 3
var_declaration (36)
    on left: 6 7, on right: 4 23
type_specifier (37)
    on left: 8 9, on right: 6 7 11 16 17
fun_declaration (38)
    on left: 11, on right: 5
@1 (39)
    on left: 10, on right: 11
params (40)
    on left: 12 13, on right: 11
param_list (41)
    on left: 14 15, on right: 12 14
param (42)
    on left: 16 17, on right: 14 15
id (43)
    on left: 18, on right: 6 7 11 16 17 41 43 65
num (44)
    on left: 19, on right: 7 63
lcurly (45)
    on left: 20, on right: 22
rcurly (46)
    on left: 21, on right: 22
compound_stmt (47)
    on left: 22, on right: 11 28
local_declarations (48)
    on left: 23 24, on right: 22 23
statement_list (49)
    on left: 25 26, on right: 22 25
statement (50)
    on left: 27 28 29 30 31, on right: 25 34 35 36
expression_stmt (51)
    on left: 32 33, on right: 27
selection_stmt (52)
    on left: 34 35, on right: 29
iteration_stmt (53)
    on left: 36, on right: 30
return_stmt (54)
    on left: 37 38, on right: 31
expression (55)
    on left: 39 40, on right: 32 34 35 36 38 39 43 60 68 69
var (56)
    on left: 41 43, on right: 39 61
@2 (57)
    on left: 42, on right: 43
simple_expression (58)
    on left: 44 45, on right: 40
relop (59)
    on left: 46 47 48 49 50 51, on right: 44
additive_expression (60)
    on left: 52 53, on right: 44 45 52
addop (61)
    on left: 54 55, on right: 52
term (62)
    on left: 56 57, on right: 52 53 56
mulop (63)
    on left: 58 59, on right: 56
factor (64)
    on left: 60 61 62 63, on right: 56 57
call (65)
    on left: 65, on right: 62
@3 (66)
    on left: 64, on right: 65
args (67)
    on left: 66 67, on right: 65
arg_list (68)
    on left: 68 69, on right: 66 68


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LBRACKET num RBRACKET SEMI
   11 fun_declaration: type_specifier . id @1 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    id  go to state 12


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

   18 id: ID .

    $default  reduce using rule 18 (id)


State 12

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LBRACKET num RBRACKET SEMI
   11 fun_declaration: type_specifier id . @1 LPAREN params RPAREN compound_stmt

    SEMI      shift, and go to state 13
    LBRACKET  shift, and go to state 14

    $default  reduce using rule 10 (@1)

    @1  go to state 15


State 13

    6 var_declaration: type_specifier id SEMI .

    $default  reduce using rule 6 (var_declaration)


State 14

    7 var_declaration: type_specifier id LBRACKET . num RBRACKET SEMI

    NUM  shift, and go to state 16

    num  go to state 17


State 15

   11 fun_declaration: type_specifier id @1 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 18


State 16

   19 num: NUM .

    $default  reduce using rule 19 (num)


State 17

    7 var_declaration: type_specifier id LBRACKET num . RBRACKET SEMI

    RBRACKET  shift, and go to state 19


State 18

   11 fun_declaration: type_specifier id @1 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 20

    type_specifier  go to state 21
    params          go to state 22
    param_list      go to state 23
    param           go to state 24


State 19

    7 var_declaration: type_specifier id LBRACKET num RBRACKET . SEMI

    SEMI  shift, and go to state 25


State 20

    9 type_specifier: VOID .
   13 params: VOID .

    RPAREN    reduce using rule 13 (params)
    $default  reduce using rule 9 (type_specifier)


State 21

   16 param: type_specifier . id
   17      | type_specifier . id LBRACKET RBRACKET

    ID  shift, and go to state 11

    id  go to state 26


State 22

   11 fun_declaration: type_specifier id @1 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 27


State 23

   12 params: param_list .
   14 param_list: param_list . COMMA param

    COMMA  shift, and go to state 28

    $default  reduce using rule 12 (params)


State 24

   15 param_list: param .

    $default  reduce using rule 15 (param_list)


State 25

    7 var_declaration: type_specifier id LBRACKET num RBRACKET SEMI .

    $default  reduce using rule 7 (var_declaration)


State 26

   16 param: type_specifier id .
   17      | type_specifier id . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 29

    $default  reduce using rule 16 (param)


State 27

   11 fun_declaration: type_specifier id @1 LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 30

    lcurly         go to state 31
    compound_stmt  go to state 32


State 28

   14 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 21
    param           go to state 33


State 29

   17 param: type_specifier id LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 34


State 30

   20 lcurly: LCURLY .

    $default  reduce using rule 20 (lcurly)


State 31

   22 compound_stmt: lcurly . local_declarations statement_list rcurly

    $default  reduce using rule 24 (local_declarations)

    local_declarations  go to state 35


State 32

   11 fun_declaration: type_specifier id @1 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 11 (fun_declaration)


State 33

   14 param_list: param_list COMMA param .

    $default  reduce using rule 14 (param_list)


State 34

   17 param: type_specifier id LBRACKET RBRACKET .

    $default  reduce using rule 17 (param)


State 35

   22 compound_stmt: lcurly local_declarations . statement_list rcurly
   23 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 26 (statement_list)

    var_declaration  go to state 36
    type_specifier   go to state 37
    statement_list   go to state 38


State 36

   23 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 23 (local_declarations)


State 37

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LBRACKET num RBRACKET SEMI

    ID  shift, and go to state 11

    id  go to state 39


State 38

   22 compound_stmt: lcurly local_declarations statement_list . rcurly
   25 statement_list: statement_list . statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 30
    RCURLY  shift, and go to state 45

    id                   go to state 46
    num                  go to state 47
    lcurly               go to state 31
    rcurly               go to state 48
    compound_stmt        go to state 49
    statement            go to state 50
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 39

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LBRACKET num RBRACKET SEMI

    SEMI      shift, and go to state 13
    LBRACKET  shift, and go to state 14


State 40

   34 selection_stmt: IF . LPAREN expression RPAREN statement
   35               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 62


State 41

   37 return_stmt: RETURN . SEMI
   38            | RETURN . expression SEMI

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    SEMI    shift, and go to state 63
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    expression           go to state 64
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 42

   36 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 65


State 43

   33 expression_stmt: SEMI .

    $default  reduce using rule 33 (expression_stmt)


State 44

   60 factor: LPAREN . expression RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    expression           go to state 66
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 45

   21 rcurly: RCURLY .

    $default  reduce using rule 21 (rcurly)


State 46

   41 var: id .
   43    | id . @2 LBRACKET expression RBRACKET
   65 call: id . @3 LPAREN args RPAREN

    LPAREN    reduce using rule 64 (@3)
    LBRACKET  reduce using rule 42 (@2)
    $default  reduce using rule 41 (var)

    @2  go to state 67
    @3  go to state 68


State 47

   63 factor: num .

    $default  reduce using rule 63 (factor)


State 48

   22 compound_stmt: lcurly local_declarations statement_list rcurly .

    $default  reduce using rule 22 (compound_stmt)


State 49

   28 statement: compound_stmt .

    $default  reduce using rule 28 (statement)


State 50

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


State 51

   27 statement: expression_stmt .

    $default  reduce using rule 27 (statement)


State 52

   29 statement: selection_stmt .

    $default  reduce using rule 29 (statement)


State 53

   30 statement: iteration_stmt .

    $default  reduce using rule 30 (statement)


State 54

   31 statement: return_stmt .

    $default  reduce using rule 31 (statement)


State 55

   32 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 69


State 56

   39 expression: var . ASSIGN expression
   61 factor: var .

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 61 (factor)


State 57

   40 expression: simple_expression .

    $default  reduce using rule 40 (expression)


State 58

   44 simple_expression: additive_expression . relop additive_expression
   45                  | additive_expression .
   52 additive_expression: additive_expression . addop term

    EQ     shift, and go to state 71
    NE     shift, and go to state 72
    LT     shift, and go to state 73
    LE     shift, and go to state 74
    GT     shift, and go to state 75
    GE     shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 45 (simple_expression)

    relop  go to state 79
    addop  go to state 80


State 59

   53 additive_expression: term .
   56 term: term . mulop factor

    TIMES  shift, and go to state 81
    OVER   shift, and go to state 82

    $default  reduce using rule 53 (additive_expression)

    mulop  go to state 83


State 60

   57 term: factor .

    $default  reduce using rule 57 (term)


State 61

   62 factor: call .

    $default  reduce using rule 62 (factor)


State 62

   34 selection_stmt: IF LPAREN . expression RPAREN statement
   35               | IF LPAREN . expression RPAREN statement ELSE statement

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    expression           go to state 84
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 63

   37 return_stmt: RETURN SEMI .

    $default  reduce using rule 37 (return_stmt)


State 64

   38 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 85


State 65

   36 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    expression           go to state 86
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 66

   60 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 87


State 67

   43 var: id @2 . LBRACKET expression RBRACKET

    LBRACKET  shift, and go to state 88


State 68

   65 call: id @3 . LPAREN args RPAREN

    LPAREN  shift, and go to state 89


State 69

   32 expression_stmt: expression SEMI .

    $default  reduce using rule 32 (expression_stmt)


State 70

   39 expression: var ASSIGN . expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    expression           go to state 90
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 71

   50 relop: EQ .

    $default  reduce using rule 50 (relop)


State 72

   51 relop: NE .

    $default  reduce using rule 51 (relop)


State 73

   48 relop: LT .

    $default  reduce using rule 48 (relop)


State 74

   49 relop: LE .

    $default  reduce using rule 49 (relop)


State 75

   47 relop: GT .

    $default  reduce using rule 47 (relop)


State 76

   46 relop: GE .

    $default  reduce using rule 46 (relop)


State 77

   54 addop: PLUS .

    $default  reduce using rule 54 (addop)


State 78

   55 addop: MINUS .

    $default  reduce using rule 55 (addop)


State 79

   44 simple_expression: additive_expression relop . additive_expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    var                  go to state 91
    additive_expression  go to state 92
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 80

   52 additive_expression: additive_expression addop . term

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id      go to state 46
    num     go to state 47
    var     go to state 91
    term    go to state 93
    factor  go to state 60
    call    go to state 61


State 81

   58 mulop: TIMES .

    $default  reduce using rule 58 (mulop)


State 82

   59 mulop: OVER .

    $default  reduce using rule 59 (mulop)


State 83

   56 term: term mulop . factor

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id      go to state 46
    num     go to state 47
    var     go to state 91
    factor  go to state 94
    call    go to state 61


State 84

   34 selection_stmt: IF LPAREN expression . RPAREN statement
   35               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 95


State 85

   38 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 38 (return_stmt)


State 86

   36 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 96


State 87

   60 factor: LPAREN expression RPAREN .

    $default  reduce using rule 60 (factor)


State 88

   43 var: id @2 LBRACKET . expression RBRACKET

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    expression           go to state 97
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 89

   65 call: id @3 LPAREN . args RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    $default  reduce using rule 67 (args)

    id                   go to state 46
    num                  go to state 47
    expression           go to state 98
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61
    args                 go to state 99
    arg_list             go to state 100


State 90

   39 expression: var ASSIGN expression .

    $default  reduce using rule 39 (expression)


State 91

   61 factor: var .

    $default  reduce using rule 61 (factor)


State 92

   44 simple_expression: additive_expression relop additive_expression .
   52 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 44 (simple_expression)

    addop  go to state 80


State 93

   52 additive_expression: additive_expression addop term .
   56 term: term . mulop factor

    TIMES  shift, and go to state 81
    OVER   shift, and go to state 82

    $default  reduce using rule 52 (additive_expression)

    mulop  go to state 83


State 94

   56 term: term mulop factor .

    $default  reduce using rule 56 (term)


State 95

   34 selection_stmt: IF LPAREN expression RPAREN . statement
   35               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 30

    id                   go to state 46
    num                  go to state 47
    lcurly               go to state 31
    compound_stmt        go to state 49
    statement            go to state 101
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 96

   36 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 30

    id                   go to state 46
    num                  go to state 47
    lcurly               go to state 31
    compound_stmt        go to state 49
    statement            go to state 102
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 97

   43 var: id @2 LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 103


State 98

   69 arg_list: expression .

    $default  reduce using rule 69 (arg_list)


State 99

   65 call: id @3 LPAREN args . RPAREN

    RPAREN  shift, and go to state 104


State 100

   66 args: arg_list .
   68 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 105

    $default  reduce using rule 66 (args)


State 101

   34 selection_stmt: IF LPAREN expression RPAREN statement .
   35               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 106

    $default  reduce using rule 34 (selection_stmt)


State 102

   36 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 36 (iteration_stmt)


State 103

   43 var: id @2 LBRACKET expression RBRACKET .

    $default  reduce using rule 43 (var)


State 104

   65 call: id @3 LPAREN args RPAREN .

    $default  reduce using rule 65 (call)


State 105

   68 arg_list: arg_list COMMA . expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    LPAREN  shift, and go to state 44

    id                   go to state 46
    num                  go to state 47
    expression           go to state 107
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 106

   35 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 16
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 30

    id                   go to state 46
    num                  go to state 47
    lcurly               go to state 31
    compound_stmt        go to state 49
    statement            go to state 108
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


State 107

   68 arg_list: arg_list COMMA expression .

    $default  reduce using rule 68 (arg_list)


State 108

   35 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 35 (selection_stmt)
